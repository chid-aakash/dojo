---
description: 
globs: 
alwaysApply: true
---
# Dojo Timeline Project Snapshot

## Project Overview
The Dojo Timeline project has been successfully bootstrapped as a React + TypeScript application using Vite. This is a comprehensive life management application featuring an interactive 6-year timeline (January 1, 2025 to January 1, 2031).

## Current Implementation Status

### ✅ Completed Features

#### 1. Project Setup
- **Framework**: Vite + React + TypeScript
- **Package Manager**: pnpm
- **Dependencies Installed**:
  - `vis-timeline@7.7.4` - Core timeline visualization library
  - `zustand@5.0.5` - State management
  - `date-fns@4.1.0` - Date formatting utilities
  - `classnames@2.5.1` - CSS class utilities
  - `tailwindcss@3.4.15` - CSS framework (downgraded to v3 for compatibility)
  - `postcss@8.5.4` - PostCSS for CSS processing
  - `autoprefixer@10.4.21` - CSS autoprefixer

#### 2. Core Architecture
- **Types System** (`src/types.ts`):
  - `PlanStatus` type: 'plan' | 'actual'
  - `TimelineItem` interface with id, title, start/end dates, status, notes, subtasks
  
- **State Management** (`src/store.ts`):
  - Zustand store with items array
  - CRUD operations: upsert, remove
  - Sample data included for demonstration:
    * Learn React & TypeScript (Jan-Mar 2025, plan)
    * Complete Dojo Timeline Project (Feb 2025, actual)
    * Career Milestone: Senior Developer (Jan 2026, plan)
    * Launch Personal Project (Jun-Aug 2025, plan)

#### 3. UI Components

**DojoTimeline Component** (`src/components/DojoTimeline.tsx`):
- Wraps vis-timeline library with enhanced configuration
- **Date Range**: January 1, 2025 to January 1, 2031 (6 years)
- **Navigation**: Full horizontal scrolling/panning enabled with `moveable: true`
- **Zoom**: 15 minutes minimum to 6 years maximum
- **Current Time**: Red line marker showing today's date/time
- **Time Format**: AM/PM format instead of 24-hour clock
- **Editable**: Add, update, and remove events
- **Color-coded**: Plan items (blue) vs actual items (green)
- **Keyboard shortcuts**: Cmd+/- for zoom
- **Mouse controls**: Drag to pan, wheel to zoom
- **Tooltips**: Formatted dates with AM/PM times
- **User instructions**: Embedded guidance for navigation and event creation

**App Component** (`src/App.tsx`):
- Clean, modern layout with Tailwind CSS
- Responsive design
- Navigation instructions for users

#### 4. Utilities & Helpers

**Zoom Shortcuts** (`src/hooks/useZoom.ts`):
- Keyboard shortcuts for timeline zoom
- Cmd+= (zoom in), Cmd+- (zoom out)

#### 5. Styling & Design
- **CSS Framework**: Tailwind CSS v3.4.15 configured with PostCSS
- **Timeline Colors**: 
  - Plan items: Blue (#3182ce with transparency)
  - Actual items: Green (#38a169 with transparency)
- **Responsive Design**: Mobile-friendly layout
- **Border styling**: Rounded borders on timeline container
- **User guidance**: Clear instructions displayed above timeline

#### 6. Type Declarations
- Custom type definitions for vis-timeline (`src/vis-timeline.d.ts`)
- Resolves TypeScript import issues

### 🚧 Current Development Status

#### Working Features:
1. ✅ Timeline visualization with vis-timeline
2. ✅ Horizontal scrolling/panning (drag to move left/right)
3. ✅ Sample data with 4 demonstration events
4. ✅ Plan vs Actual color coding
5. ✅ Zoom controls (mouse wheel and keyboard shortcuts)
6. ✅ Current time red line marker
7. ✅ AM/PM time format throughout
8. ✅ 15-minute minimum zoom interval
9. ✅ 6-year timeline span (2025-2031)
10. ✅ Double-click to add new events
11. ✅ Responsive design with user instructions
12. ✅ Git repository with all changes committed and pushed

#### Fixed Issues:
1. ✅ PostCSS configuration errors resolved by downgrading to Tailwind v3
2. ✅ Timeline scrolling now works properly with moveable option
3. ✅ Date range changed from June 2025-2030 to January 2025-2031
4. ✅ Time format switched from 24-hour to AM/PM format
5. ✅ Minimum zoom level properly set to 15 minutes

#### Known Issues:
1. ⚠️ UUID peer dependency version mismatch (non-blocking)

### 📁 Project Structure
```
dojo-timeline/
├── src/
│   ├── components/
│   │   └── DojoTimeline.tsx     # Enhanced timeline component
│   ├── hooks/
│   │   └── useZoom.ts          # Zoom keyboard shortcuts
│   ├── types.ts                # TypeScript type definitions
│   ├── store.ts                # Zustand state management with sample data
│   ├── vis-timeline.d.ts       # Type declarations for vis-timeline
│   ├── App.tsx                 # Main app component
│   ├── index.css               # Global styles + Tailwind
│   └── main.tsx                # App entry point
├── tailwind.config.js          # Tailwind CSS v3 configuration
├── postcss.config.js           # PostCSS configuration (fixed)
├── package.json                # Dependencies and scripts
└── vite.config.ts              # Vite configuration
```

### 🎯 Next Development Priorities

#### Immediate (Phase 1):
1. Add EventModal component for better event editing
2. Implement localStorage persistence for timeline data
3. Add event deletion with right-click context menu
4. Implement event editing on click/double-click
5. Add drag-and-drop event rearrangement

#### Short-term (Phase 2):
1. Plan vs Actual deviation visualization
2. Progress tracking and analytics
3. Export/import functionality
4. Better mobile responsiveness
5. Implement subtasks support
6. Add event categories and filtering

#### Medium-term (Phase 3):
1. AI assistant integration
2. Habit tracking system
3. Task management features
4. Collaborative features
5. Advanced timeline views (Gantt chart style)

### 🚀 Development Server
- **Status**: Running on http://localhost:5173/
- **Command**: `pnpm run dev`
- **Hot Reload**: Enabled
- **Build Command**: `pnpm run build`

### 📊 Current Functionality
The application now provides a fully functional timeline with:
- **Navigation**: Drag left/right to pan, mouse wheel to zoom, Cmd+/- keyboard shortcuts
- **Sample Events**: 4 demonstration items showing different types (plan vs actual)
- **Current Time**: Red line showing today's date and time
- **Time Display**: AM/PM format throughout (9:00 AM, not 09:00)
- **Date Range**: Spans from January 1, 2025 to January 1, 2031
- **Event Creation**: Double-click anywhere to add new events
- **Visual Clarity**: Clear borders, colors, and user instructions

### 🔧 Technical Notes
- Uses vis-timeline standalone version for better bundle size
- Implements proper cleanup in React useEffect
- Date handling with date-fns using PPP p format (AM/PM)
- Zustand provides lightweight state management
- Tailwind CSS v3 for reliable styling
- Vite for fast development and building
- Git repository with comprehensive commit history

### 📋 Git Status
- **Repository**: https://github.com/chid-aakash/dojo.git
- **Branch**: main
- **Last Commit**: Fix timeline navigation, date range, time format, and add sample data
- **Status**: All changes committed and pushed

This snapshot represents a fully functional and enhanced Dojo Timeline application with all major navigation and display issues resolved, ready for advanced feature development.
